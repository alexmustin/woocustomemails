<?php
/**
 * Renders the WooCommerce Product Data admin settings.
 *
 * @package cepp4wc_domain
 */

/**
 * Custom_Emails_Per_Product_For_WC_Product_Data_Admin is a class for adding the Custom Email Admin settings for each Product.
 */
class Custom_Emails_Per_Product_For_WC_Product_Data_Admin {

	/**
	 * Track the plugin version.
	 *
	 * @var string $version The version number.
	 */
	protected $version;

	/**
	 * Creates a new Tab in the WC Product settings section.
	 *
	 * @param object $original_prodata_tabs  An object containing the Settings Tabs.
	 */
	public function add_cepp4wc_tab( $original_prodata_tabs ) {

		$this->options = get_option( 'cepp4wc_settings_name' );

		$display_classes_default = 'show_if_simple, show_if_variable, show_if_external, show_if_downloadable, show_if_grouped';
		$display_classes_setting = '';

		if ( isset( $this->options['display_classes'] ) ) {
			// Data is set.
			$display_classes_setting = $display_classes_default . ', ' . $this->options['display_classes'];
		} else {
			// No Data set.
			$display_classes_setting = $display_classes_default;
		}

		// Remove whitespace.
		$display_classes_setting = str_replace( ' ', '', $display_classes_setting );

		// Turn the string into an array.
		$display_classes_arr = explode( ',', $display_classes_setting );

		$new_custom_tab['woo-custom-emails'] = array(
			'label'  => __( 'Custom Emails', 'cepp4wc_domain' ),
			'target' => 'cepp4wc_product_data',
			'class'  => $display_classes_arr,
		);

		$insert_at_position = 2; // Set the position in the tab list.

		// Split the tabs into an array, then keep the first part up until our position number.
		$tabs = array_slice( $original_prodata_tabs, 0, $insert_at_position, true );

		// Add our new tab into the array.
		$tabs = array_merge( $tabs, $new_custom_tab );

		// Append the last part of tabs array.
		$tabs = array_merge( $tabs, array_slice( $original_prodata_tabs, $insert_at_position, null, true ) );

		return $tabs;

	}

	/**
	 * Adds the custom Admin stylesheet.
	 */
	public function cepp4wp_custom_admin_style() {
		include_once dirname( __FILE__ ) . '/cepp4wp-admin-styles.css';
	}

	/**
	 * Enqueues the custom Admin stylesheet.
	 */
	public function cepp4wp_enqueue_custom_admin_style() {

		global $pagenow;

		// If we are not on the Edit page, exit the function.
		if ( 'edit.php' !== $pagenow ) {
			return;
		}

		wp_register_style( 'cepp4wp_custom_admin_css', plugins_url( 'cepp4wp-admin-styles.css', __FILE__ ), null, '1.0' );
		wp_enqueue_style( 'cepp4wp_custom_admin_css' );

		include_once dirname( __FILE__ ) . '/cepp4wp-admin-styles.css';

	}

	/**
	 * Adds fields to the 'Custom Emails' Product Data tab.
	 */
	public function add_cepp4wc_tab_fields() {

		global $post;

		// Get WCE Settings.
		$this->options    = get_option( 'cepp4wc_settings_name' );
		$show_old_content = false;

		// Get Meta from this Post.
		$this_product_id    = get_the_ID();
		$customcontent_meta = get_post_meta( $this_product_id, 'custom_content', true );

		// Note the 'id' attribute MUST match the 'target' parameter set above.
		?>
		<div id='cepp4wc_product_data' class='panel woocommerce_options_panel'>


			<!-- // 2.2.0
			************************************************************* // -->
			<div class='options_group'>

				<div class="cepp4wc-product-options-table">

					<div class="table-header">
						<div class="status">
							<?php echo esc_html__( 'Order Status', 'cepp4wc_domain' ); ?>
							<span class="woocommerce-help-tip" data-tip="<?php echo esc_html__( 'The Order Status Email which is automatically generated by WooCommerce.', 'cepp4wc_domain' ); ?>"></span>
						</div>
						<div class="message">
							<?php echo esc_html__( 'Custom Email Message', 'cepp4wc_domain' ); ?>
							<span class="woocommerce-help-tip" data-tip="<?php echo esc_html__( 'Select a Custom Email Message to be displayed in the Order Status email.', 'cepp4wc_domain' ); ?>"></span>
						</div>
						<div class="location">
							<?php echo esc_html__( 'Content Location', 'cepp4wc_domain' ); ?>
							<span class="woocommerce-help-tip" data-tip="<?php echo esc_html__( 'Select where your custom content will display in the Order Status email.', 'cepp4wc_domain' ); ?>"></span>
						</div>
						<?php
						// TODO: Add "PREVIEW" page link to show users what the Custom Email will look like.
						?>
					</div>

					<?php
					$customcontent_orderstatus = get_post_meta( $this_product_id, 'order_status', true );
					$customcontent_location    = get_post_meta( $this_product_id, 'location', true );

					/**
					 * Returns the title of a Custom Email Message.
					 *
					 * @param  integer $msg_id  The id of the message.
					 * @param  string  $status_name  The name of the Status Message.
					 * @return string  $return_str  [description]
					 */
					function get_message_title( $msg_id = 0, $status_name = '' ) {

						$cepp4wc_message_title = get_the_title( $msg_id );
						$edit_url         = admin_url( 'post.php?post=' . $msg_id . '&action=edit' );
						$edit_btn         = '<a href="' . $edit_url . '" target="_blank" class="button edit-cepp4wp_message" alt="' . __( 'Edit', 'cepp4wc_domain' ) . '" title="' . __( 'Edit', 'cepp4wc_domain' ) . '"><span class="dashicons dashicons-edit"></span></a>';

						// Check if this message is Published.
						if ( get_post_status( $msg_id ) !== 'publish' ) {
							// Saved WCE Message is not published, show Invalid message.
							$cepp4wc_message_saved_text = '(' . __( 'Invalid Message Selected', 'cepp4wc_domain' ) . ')';
						} else {
							// Saved WCE Message is published.
							$cepp4wc_message_saved_text = $cepp4wc_message_title . '';
						}

						$default_search_msg = __( 'Search Custom Messages...', 'cepp4wc_domain' );

						$return_str = '<input class="cepp4wc_message_search_field_input" type="text" value="' . $cepp4wc_message_saved_text . '" name="cepp4wc_message_search_' . $status_name . '" id="cepp4wc_message_search_' . $status_name . '" placeholder="' . $default_search_msg . '" autocomplete="off"></input>';

						$return_str .= wp_nonce_field( 'ajax_nonce_action', 'ajax_nonce' );

						return $return_str;

					}

					/**
					 * Displays a Custom Email Message.
					 *
					 * @param  string $status_name  The name of the Status message.
					 * @return void
					 */
					function show_saved_message( $status_name = '' ) {

						// Set the Status "slug".
						if ( 'onhold' === $status_name ) {
							$status_slug = 'on-hold';
						} else {
							$status_slug = $status_name;
						}

						$post_id                     = get_the_ID();
						$cepp4wc_message_id               = get_post_meta( $post_id, 'cepp4wc_message_id', true );
						$cepp4wc_message_id_currentstatus = '';
						$cepp4wc_message_id_currentstatus = get_post_meta( $post_id, 'cepp4wc_message_id_' . $status_name, true );
						$cepp4wc_message_controls         = '';
						$customcontent_orderstatus   = '';
						$customcontent_orderstatus   = get_post_meta( $post_id, 'order_status', true );

						$extra_btn_container_open             = '<div class="button-container">';
						$extra_btn_container_open_remove_edit = '<div class="button-container remove edit">';
						$extra_btn_container_close            = '</div>';

						$kses_allowed_html = array(
							'a'     => array(
								'alt'    => array(),
								'class'  => array(),
								'href'   => array(),
								'target' => array(),
								'title'  => array(),
							),
							'div'   => array(
								'class' => array(),
							),
							'input' => array(
								'autocomplete' => array(),
								'class'        => array(),
								'id'           => array(),
								'name'         => array(),
								'placeholder'  => array(),
								'type'         => array(),
								'value'        => array(),
							),
							'span'  => array(
								'class' => array(),
							),
						);

						?>
						<div class="form-field cepp4wc_message_search_field">
							<?php
							// If NEW 2.2.0 data is saved for this Order Status.
							if ( ! empty( $cepp4wc_message_id_currentstatus ) ) {

								echo wp_kses( get_message_title( $cepp4wc_message_id_currentstatus, $status_name ), $kses_allowed_html );

								$edit_url   = admin_url( 'post.php?post=' . $cepp4wc_message_id_currentstatus . '&action=edit' );
								$edit_btn   = '<a href="' . $edit_url . '" target="_blank" class="button edit-cepp4wc_message" alt="' . __( 'Edit', 'cepp4wc_domain' ) . '" title="' . __( 'Edit', 'cepp4wc_domain' ) . '"><span class="dashicons dashicons-edit"></span></a>';
								$remove_btn = '<a href="#" class="button remove-cepp4wc_message" alt="' . __( 'Remove', 'cepp4wc_domain' ) . '" title="' . __( 'Remove', 'cepp4wc_domain' ) . '"><span class="dashicons dashicons-no"></span></a>';

								$cepp4wc_message_controls = $extra_btn_container_open_remove_edit . $remove_btn . $edit_btn . $extra_btn_container_close;

							} else {

								// If previous data is saved for this Order Status...
								if ( ( 'woocommerce_order_status_' . $status_slug ) === $customcontent_orderstatus ) {

									// Check if a message ID has been assigned.
									if ( ! empty( $cepp4wc_message_id ) ) {

										$cepp4wc_message_title    = get_the_title( $cepp4wc_message_id );
										$edit_url            = admin_url( 'post.php?post=' . $cepp4wc_message_id . '&action=edit' );
										$edit_btn            = '<a href="' . $edit_url . '" target="_blank" class="button edit-cepp4wc_message" alt="' . __( 'Edit', 'cepp4wc_domain' ) . '" title="' . __( 'Edit', 'cepp4wc_domain' ) . '"><span class="dashicons dashicons-edit"></span></a>';
										$remove_btn          = '<a href="#" class="button remove-cepp4wc_message" alt="' . __( 'Remove', 'cepp4wc_domain' ) . '" title="' . __( 'Remove', 'cepp4wc_domain' ) . '"><span class="dashicons dashicons-no"></span></a>';
										$cepp4wc_message_controls = $extra_btn_container_open_remove_edit . $remove_btn . $edit_btn . $extra_btn_container_close;

										// Check if this message is Published.
										if ( get_post_status( $cepp4wc_message_id ) !== 'publish' ) {
											// Saved WCE Message is not published, show Invalid message.
											$cepp4wc_message_saved_text = '(' . __( 'Invalid Message Selected', 'cepp4wc_domain' ) . ')';
										} else {
											// Saved WCE Message is published.
											$cepp4wc_message_saved_text = $cepp4wc_message_title . '';
										}
										?>
										<input class="cepp4wc_message_search_field_input" type="text" value="<?php echo esc_attr( $cepp4wc_message_saved_text ); ?>" name="cepp4wc_message_search_<?php echo esc_attr( $status_name ); ?>" id="cepp4wc_message_search_<?php echo esc_attr( $status_name ); ?>" placeholder="<?php echo esc_html__( 'Search Custom Messages...', 'cepp4wc_domain' ); ?>" autocomplete="off"></input>
										<?php
									} else {
										// Order Status is assigned, but No WCE Message is assigned = probably not a real world scenario.
										$cepp4wc_message_controls = $extra_btn_container_open . $extra_btn_container_close;
										?>
										<input class="cepp4wc_message_search_field_input" type="text" name="cepp4wc_message_search_<?php echo esc_attr( $status_name ); ?>" id="cepp4wc_message_search_<?php echo esc_attr( $status_name ); ?>" placeholder="<?php echo esc_html__( 'Search Custom Messages...', 'cepp4wc_domain' ); ?>" autocomplete="off"></input>
										<?php
									}
								} else {
									// No previous WCE data is saved.
									$cepp4wc_message_controls = $extra_btn_container_open . $extra_btn_container_close;
									?>
									<input class="cepp4wc_message_search_field_input" type="text" name="cepp4wc_message_search_<?php echo esc_attr( $status_name ); ?>" id="cepp4wc_message_search_<?php echo esc_attr( $status_name ); ?>" placeholder="<?php echo esc_html__( 'Search Custom Messages...', 'cepp4wc_domain' ); ?>" autocomplete="off"></input>
									<?php
								}
							}
							?>
							<div class="cepp4wc_message_search_results hide" id="cepp4wc_message_<?php echo esc_attr( $status_name ); ?>_search_results">
								<div class="cepp4wc_message_search_results_wrap">
									<p class="placeholder"><?php echo esc_html__( 'Search results will appear here', 'cepp4wc_domain' ); ?></p>
								</div>
							</div>
						</div>
						<?php
						echo wp_kses( $cepp4wc_message_controls, $kses_allowed_html );

						$hidden_field_val = '';

						// If NEW 2.2.0 data is saved for this Order Status...
						if ( ! empty( $cepp4wc_message_id_currentstatus ) ) {
							$hidden_field_val = $cepp4wc_message_id_currentstatus;
						}
						if ( ( 'woocommerce_order_status_' . $status_slug ) === $customcontent_orderstatus ) {
							$hidden_field_val = $cepp4wc_message_id;
						}
						?>
						<input class="cepp4wc_message_search_field_hidden" type="hidden" name="cepp4wc_message_id_<?php echo esc_attr( $status_name ); ?>" id="cepp4wc_message_id_<?php echo esc_attr( $status_name ); ?>" value="<?php echo esc_attr( $hidden_field_val ); ?>" />
						<?php
					}

					/**
					 * Returns a drop down menu of template locations.
					 *
					 * @param string $status_name The name of the status message.
					 * @return void
					 */
					function showLocationSelect( $status_name = '' ) {

						$location_select_arr = array(
							'woocommerce_email_before_order_table' => __( 'Before Order Table', 'cepp4wc_domain' ),
							'woocommerce_email_after_order_table' => __( 'After Order Table', 'cepp4wc_domain' ),
							'woocommerce_email_order_meta' => __( 'After Order Meta', 'cepp4wc_domain' ),
							'woocommerce_email_customer_details' => __( 'After Customer Details', 'cepp4wc_domain' ),
						);

						if ( 'onhold' === $status_name ) {
							$status_slug = 'on-hold';
						} else {
							$status_slug = $status_name;
						}

						$current_status_location = get_post_meta( get_the_ID(), 'location_' . $status_name, true );
						$old_order_status        = get_post_meta( get_the_ID(), 'order_status', true );
						$old_order_location      = get_post_meta( get_the_ID(), 'location', true );

						// If NEW 2.2.0 data is saved for this Order Status...
						if ( ! empty( $current_status_location ) ) {

							// Show a Select menu with the new saved value.
							woocommerce_wp_select(
								array(
									'id'       => $status_name . '-location',
									'label'    => '',
									'options'  => $location_select_arr,
									'desc_tip' => false,
									'value'    => $current_status_location, // Use the new saved value.
								)
							);

						} else {

							// If the previous data has been saved for the current Order Status...
							if ( ( 'woocommerce_order_status_' . $status_name ) === $old_order_status ) {

								// If the previous data is saved for this Order Status...
								if ( ! empty( $old_order_location ) ) {

									// Show a Select menu with the old saved value.
									woocommerce_wp_select(
										array(
											'id'       => $status_name . '-location',
											'label'    => '',
											'options'  => $location_select_arr,
											'desc_tip' => false,
											'value'    => $old_order_location, // Use the old saved value.
										)
									);
								} else {
									// Show a Select menu with no default value.
									woocommerce_wp_select(
										array(
											'id'       => $status_name . '-location',
											'label'    => '',
											'options'  => $location_select_arr,
											'desc_tip' => false,
										)
									);
								}
							} else {
								// No data has been saved for the current Order Status.

								// Show a Select menu with no default value.
								woocommerce_wp_select(
									array(
										'id'       => $status_name . '-location',
										'label'    => '',
										'options'  => $location_select_arr,
										'desc_tip' => false,
									)
								);
							}
						}

					}
					?>

					<!-- // ON-HOLD ***************************************************** // -->
					<div class="table-row">
						<div class="status order_status">
							<mark class="order-status status-on-hold">
								<span><?php echo esc_html__( 'On hold', 'cepp4wc_domain' ); ?></span>
							</mark>
						</div>
						<div class="message">
							<?php show_saved_message( 'onhold' ); ?>
						</div>
						<div class="location">
							<?php showLocationSelect( 'onhold' ); ?>
						</div>
						<?php
						// Create a nonce.
						wp_nonce_field( 'status_onhold_action', 'cepp4wc_message_onhold_nonce' );
						?>
					</div>

					<!-- // PROCESSING ***************************************************** // -->
					<div class="table-row">
						<div class="status order_status">
							<mark class="order-status status-processing">
								<span><?php echo esc_html__( 'Processing', 'cepp4wc_domain' ); ?></span>
							</mark>
						</div>
						<div class="message">
							<?php show_saved_message( 'processing' ); ?>
						</div>
						<div class="location">
							<?php showLocationSelect( 'processing' ); ?>
						</div>
						<?php
						// Create a nonce.
						wp_nonce_field( 'status_processing_action', 'cepp4wc_message_processing_nonce' );
						?>
					</div>

					<!-- // COMPLETED ***************************************************** // -->
					<div class="table-row">
						<div class="status order_status">
							<mark class="order-status status-completed">
								<span><?php echo esc_html__( 'Completed', 'cepp4wc_domain' ); ?></span>
							</mark>
						</div>
						<div class="message">
							<?php show_saved_message( 'completed' ); ?>
						</div>
						<div class="location">
							<?php showLocationSelect( 'completed' ); ?>
						</div>
						<?php
						// Create a nonce.
						wp_nonce_field( 'status_completed_action', 'cepp4wc_message_completed_nonce' );
						?>
					</div>

				</div>

			</div>

		</div>
		<?php
	}

	/**
	 * Outputs the AJAX Fetch JS functions.
	 *
	 * @return void
	 */
	public function ajax_cepp4wp_fetch_script() {
		?>
		<script type="text/javascript">
		function fetch_cepp4wp_posts_onhold(){
			jQuery.ajax({
				url: '<?php echo esc_url( admin_url( 'admin-ajax.php' ) ); ?>',
				type: 'post',
				data: {
					action: 'cepp4wp_data_fetch',
					keyword: jQuery('#cepp4wc_message_search_onhold').val(),
					ajax_nonce: jQuery('#ajax_nonce').val(),
				},
				success: function(data) {
					jQuery('#cepp4wc_message_onhold_search_results .cepp4wc_message_search_results_wrap').html( data );
				}
			});
		}

		function fetch_cepp4wp_posts_processing(){
			jQuery.ajax({
				url: '<?php echo esc_url( admin_url( 'admin-ajax.php' ) ); ?>',
				type: 'post',
				data: {
					action: 'cepp4wp_data_fetch',
					keyword: jQuery('#cepp4wc_message_search_processing').val(),
					ajax_nonce: jQuery('#ajax_nonce').val(),
				},
				success: function(data) {
					jQuery('#cepp4wc_message_processing_search_results .cepp4wc_message_search_results_wrap').html( data );
				}
			});
		}

		function fetch_cepp4wp_posts_completed(){
			jQuery.ajax({
				url: '<?php echo esc_url( admin_url( 'admin-ajax.php' ) ); ?>',
				type: 'post',
				data: {
					action: 'cepp4wp_data_fetch',
					keyword: jQuery('#cepp4wc_message_search_completed').val(),
					ajax_nonce: jQuery('#ajax_nonce').val(),
				},
				success: function(data) {
					jQuery('#cepp4wc_message_completed_search_results .cepp4wc_message_search_results_wrap').html( data );
				}
			});
		}

		jQuery(document).ready( function($) {

			// Apply onkeyup behavior
			$('#cepp4wc_message_search_onhold').keyup(function () {
				fetch_cepp4wp_posts_onhold();
			});

			$('#cepp4wc_message_search_processing').keyup(function () {
				fetch_cepp4wp_posts_processing();
			});

			$('#cepp4wc_message_search_completed').keyup(function () {
				fetch_cepp4wp_posts_completed();
			});

			/* ---------------------------- 2.2.0 --------------------------- */

			var allHidden = false;

			function hideAllSearchResultsBoxes() {

				if ( allHidden !== true ) {

					// Hide all SR boxes
					$('.cepp4wc_message_search_results').addClass('hide');

					// Assign 'allHidden' var to true
					allHidden = true;

				}

			}

			function hideSearchResultsBox(thisElem) {
				// Add 'hide' class to closest SR box
				thisElem.closest('.message').find('.cepp4wc_message_search_results').addClass('hide');
			}

			function showSearchResultsBox(thisElem) {
				// Remove 'hide' class from closest SR box
				thisElem.closest('.message').find('.cepp4wc_message_search_results').removeClass('hide');
				allHidden = false;
			}

			// Click functions
			$(document).on('click', function(e) {

				var target = e.target;
				var targetClass = target.className;

				if ( targetClass == 'cepp4wc_message_search_field_input' ) {

					/* SEARCH FIELD CLICKED - SHOW SEARCH RESULTS MODAL
					--------------------------------------------------------- */

					// Don't jump to top of page
					e.preventDefault();

					// Hide all search results elements
					$('.cepp4wc_message_search_results').addClass('hide');

					// Remove 'hide' class from closest search results box
					showSearchResultsBox( $(e.target) );

					// Focus on the search results box that was clicked
					$(e.target).closest('.message').focus();

				} else if ( targetClass == 'cepp4wc-search-result' ) {

					/* SEARCH RESULT CLICKED - ASSIGN CUSTOM EMAIL MESSAGE
					--------------------------------------------------------- */

					// Don't jump to top of page
					e.preventDefault();

					// Define vars
					var theid = $(e.target).attr('data-id');
					var thetitle = $(e.target).attr('data-title');

					// Update field values
					$(e.target).closest('.table-row').find('.cepp4wc_message_search_field_hidden').val(theid);	// hidden field
					$(e.target).closest('.table-row').find('.cepp4wc_message_search_field_input').val(thetitle);	// search field

					// Add a new 'Remove' button if not already present
					$(e.target).closest('.table-row').find('.button-container:not(.remove)').addClass('remove').html('<a href="#" class="button remove-cepp4wc_message" alt="Remove" title="Remove"><span class="dashicons dashicons-no"></span></a>');

					// Add 'hide' class to closest search results box
					hideSearchResultsBox( $(e.target) );

				} else {

					/* NORMAL PAGE ELEMENT CLICKED - HIDE ALL SEARCH RESULTS BOXES
					--------------------------------------------------------- */

					hideAllSearchResultsBoxes();

				}

			});

			// Remove button
			$(document).on('click', '.remove-cepp4wc_message', function(e) {

				// Don't jump to top of page
				e.preventDefault();

				// Hide Edit buttons
				$(this).closest('.table-row').find('.button-container').find('.button').addClass('hide');

				// Remove field values
				$(this).closest('.table-row').find('.cepp4wc_message_search_field_input').val('');
				$(this).closest('.table-row').find('.cepp4wc_message_search_field_hidden').val('');

				// Remove CSS classes
				$(this).closest('.button-container').removeClass('remove');
				$(this).closest('.button-container').removeClass('edit');

			});

		});
		</script>
		<?php
	}

	/**
	 * Runs the AJAX Fetch function.
	 *
	 * @return void
	 */
	public function cepp4wp_data_fetch() {

		if ( isset( $_POST['keyword'], $_POST['ajax_nonce'] ) && wp_verify_nonce( sanitize_key( $_POST['ajax_nonce'] ), 'ajax_nonce_action' ) ) {
			$search_term = sanitize_text_field( wp_unslash( $_POST['keyword'] ) );
		} else {
			$search_term = '';
		}

		$args = array(
			'post_type'      => 'woocustomemails',
			'post_status'    => 'publish',
			'posts_per_page' => -1,
			's'              => $search_term,
		);

		$the_query = new WP_Query( $args );

		if ( $the_query->have_posts() ) {
			while ( $the_query->have_posts() ) :

				$the_query->the_post();

				$the_permalink = esc_url( get_permalink() );
				$the_id        = get_the_ID();
				$the_title     = get_the_title();
				?>
				<p><a href="#" class="cepp4wc-search-result" data-id="<?php echo esc_attr( $the_id ); ?>" data-title="<?php echo esc_attr( $the_title ); ?>"><?php echo esc_attr( $the_id ); ?> - <?php echo esc_html( $the_title ); ?></a></p>
				<?php
			endwhile;
			wp_reset_postdata();
		} else {
			$add_messages_url  = admin_url( 'edit.php?post_type=cepp4wp_message' );
			$add_messages_text = '<a href="' . $add_messages_url . '" target="_blank" class="edit-cepp4wc_message">' . __( 'Custom Email Messages', 'cepp4wc_domain' ) . '</a>';
			?>
			<p class="placeholder error">
				<?php
				echo esc_html__( 'Sorry! No posts match your search. Please add some ', 'cepp4wc_domain' );
				echo wp_kses( $add_messages_text, $kses_allowed_html );
				echo esc_html__( ' and try again.', 'cepp4wc_domain' );
				?>
			</p>
			<?php
		}

		die();
	}


	/**
	 * Callback function to save custom fields information.
	 *
	 * @param  [type] $post_id The Post ID.
	 * @return void
	 */
	public function save_cepp4wc_tab_fields( $post_id ) {

		// ON-HOLD.
		if ( isset( $_POST['cepp4wc_message_id_onhold'], $_POST['cepp4wc_message_onhold_nonce'] ) && wp_verify_nonce( sanitize_key( $_POST['cepp4wc_message_onhold_nonce'] ), 'status_onhold_action' ) ) {
			$msg_onhold_id = sanitize_text_field( wp_unslash( $_POST['cepp4wc_message_id_onhold'] ) );
		}
		if ( isset( $_POST['onhold-location'], $_POST['cepp4wc_message_onhold_nonce'] ) && wp_verify_nonce( sanitize_key( $_POST['cepp4wc_message_onhold_nonce'] ), 'status_onhold_action' ) ) {
			$msg_onhold_location = sanitize_text_field( wp_unslash( $_POST['onhold-location'] ) );
		}

		// PROCESSING.
		if ( isset( $_POST['cepp4wc_message_id_processing'], $_POST['cepp4wc_message_processing_nonce'] ) && wp_verify_nonce( sanitize_key( $_POST['cepp4wc_message_processing_nonce'] ), 'status_processing_action' ) ) {
			$msg_processing_id = sanitize_text_field( wp_unslash( $_POST['cepp4wc_message_id_processing'] ) );
		}
		if ( isset( $_POST['processing-location'], $_POST['cepp4wc_message_processing_nonce'] ) && wp_verify_nonce( sanitize_key( $_POST['cepp4wc_message_processing_nonce'] ), 'status_processing_action' ) ) {
			$msg_processing_location = sanitize_text_field( wp_unslash( $_POST['processing-location'] ) );
		}

		// COMPLETED.
		if ( isset( $_POST['cepp4wc_message_id_completed'], $_POST['cepp4wc_message_completed_nonce'] ) && wp_verify_nonce( sanitize_key( $_POST['cepp4wc_message_completed_nonce'] ), 'status_completed_action' ) ) {
			$msg_completed_id = sanitize_text_field( wp_unslash( $_POST['cepp4wc_message_id_completed'] ) );
		}
		if ( isset( $_POST['completed-location'], $_POST['cepp4wc_message_completed_nonce'] ) && wp_verify_nonce( sanitize_key( $_POST['cepp4wc_message_completed_nonce'] ), 'status_completed_action' ) ) {
			$msg_completed_location = sanitize_text_field( wp_unslash( $_POST['completed-location'] ) );
		}

		// Update the post meta.
		update_post_meta( $post_id, 'cepp4wc_message_id_onhold', $msg_onhold_id );
		update_post_meta( $post_id, 'location_onhold', $msg_onhold_location );

		update_post_meta( $post_id, 'cepp4wc_message_id_processing', $msg_processing_id );
		update_post_meta( $post_id, 'location_processing', $msg_processing_location );

		update_post_meta( $post_id, 'cepp4wc_message_id_completed', $msg_completed_id );
		update_post_meta( $post_id, 'location_completed', $msg_completed_location );

	}

}
